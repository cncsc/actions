name: Validation
on:
  workflow_call:
    inputs:
      runPreCommit:
        description: Whether or not to run pre-commit during validation.
        required: false
        type: boolean
        default: true
      runDefaultLinters:
        description: Whether or not to run the lint script from the project's package.json file.
        required: false
        type: boolean
        default: true
      additionalHomebrewPackages:
        description: A space-delimited list of Homebrew packages to install.
        required: false
        type: string
        default: ''
      additionalPreCommitArgs:
        description: options to pass to pre-commit run
        required: false
        type: string
        default: '--all-files'
      npmTestScripts:
        description: A space-delimited list of NPM scripts to run as tests. E.g. 'test e2e'
        required: false
        type: string
        default: ''
    secrets:
      GIT_TOKEN_BASIC:
        required: false
jobs:

  # -------------------------------------------------------------------------------------------------------------------
  # RUN PRE-COMMIT VALIDATION
  # -------------------------------------------------------------------------------------------------------------------
  pre-commit:
    name: Run pre-commit validation
    runs-on: ubuntu-latest
    if: inputs.runPreCommit == true
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN_BASIC || github.token }}

      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - uses: Homebrew/actions/setup-homebrew@master
        if: inputs.additionalHomebrewPackages != ''

      - name: Install Homebrew packages
        if: inputs.additionalHomebrewPackages != ''
        run: brew install ${{ inputs.additionalHomebrewPackages }}
        shell: bash

      - name: Install pre-commit
        # This remains a python/pip step to keep Homebrew install optional.
        run: python -m pip install pre-commit
        shell: bash

      - name: Freeze python dependencies
        run: python -m pip freeze --local
        shell: bash

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ hashFiles('.pre-commit-config.yaml') }}|${{ env.pythonLocation }}

      - name: Run pre-commit validation
        run: pre-commit run --show-diff-on-failure --color=always ${{ inputs.additionalPreCommitArgs }}
        shell: bash

  # -------------------------------------------------------------------------------------------------------------------
  # RUN DEFAULT LINTERS
  # -------------------------------------------------------------------------------------------------------------------
  lint:
    name: Run default linters
    runs-on: ubuntu-latest
    if: inputs.runDefaultLinters == true
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN_BASIC || github.token }}

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Install node dependencies
        run: npm ci
        shell: bash

      - name: Run lint script
        run: npm run lint
        shell: bash

  run-tests:
    name: Run optional tests
    runs-on: ubuntu-latest
    if: inputs.npmTestScripts != ''
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN_BASIC || github.token }}

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Install node dependencies
        run: npm ci
        shell: bash

      - name: Run unit tests
        run: |
          echo "all good ${{ inputs.npmTestScripts }}"
        shell: bash

      - name: Run e2e tests
        run: echo "all good2 ${{ inputs.npmTestScripts }}"
        shell: bash
