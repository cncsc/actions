on:
  workflow_call:
    inputs:
      environment:
        description: The environment that this job references. e.g. prod
        required: false
        type: string
        default: ''
      awsRegion:
        description: AWS region. e.g. ap-southeast-1
        required: true
        type: string
      iamRoleToAssume:
        description: IAM role to assume when logging in to AWS. e.g. arn:aws:iam::11111:role/read-only
        required: false
        type: string
        default: ''
      ecrRegistryName:
        description: ECR registry name. e.g. 11111111.dkr.ecr.ap-southeast-1.amazonaws.com
        required: true
        type: string
      imageRepoName:
        description: Docker image repository. e.g. customer
        required: true
        type: string
      imageTag:
        description: Docker image tag. e.g. 1.0.0
        required: true
        type: string

    secrets:
      AWS_ACCESS_KEY_ID:
        description: AWS access key ID.
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: AWS secret access key.
        required: true
      GIT_TOKEN_BASIC:
        required: true

jobs:
  build-and-push-docker-image:
    name: Builds a Docker image and pushes it to an ECR repository.
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GIT_TOKEN_BASIC || github.token }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.awsRegion }}
          role-to-assume: ${{ inputs.iamRoleToAssume }}

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.ecrRegistryName }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ inputs.ecrRegistryName }}/${{ inputs.imageRepoName }}:${{ inputs.imageTag }}
